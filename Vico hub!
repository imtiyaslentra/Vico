-- Credits To The Original Devs @xz, @goof 
getgenv().Config = {
    Invite = "informant.wtf",
    Version = "Intergrated",
}

getgenv().luaguardvars = {
    DiscordName = "username#0000",
}

local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/drillygzzly/Other/main/1"))()

library:init() -- Initalizes Library Do Not Delete This

local Window = library.NewWindow({
    title = "Informant.Wtf",
    size = UDim2.new(0, 525, 0, 650)
})

local tabs = {
    Tab1 = Window:AddTab("Tab1"),
    Settings = library:CreateSettingsTab(Window),
}

local sections = {
    Section1 = tabs.Tab1:AddSection("Section1", 1),
    Section2 = tabs.Tab1:AddSection("Section2", 2),
}

-- Auto Parry Toggle
sections.Section1:AddToggle({
    enabled = false,
    text = "Auto Parry",
    flag = "Toggle_Parry",
    tooltip = "Enable or Disable Auto Parry",
    risky = true, -- turns text to red and sets label to risky
    callback = function(state)
        if state then
            print("Auto Parry Enabled")
        else
            print("Auto Parry Disabled")
        end
        getgenv().AutoParryEnabled = state
    end
})

-- The original Auto Parry function
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local VirtualInputManager = game:GetService("VirtualInputManager")
local BallFolder = Workspace:WaitForChild("Balls")
local player = Players.LocalPlayer
local canParry = true

local function calculatePredictionTime(ball)
    local character = player.Character
    if character then
        local rootPart = character:FindFirstChild("HumanoidRootPart")
        if rootPart then
            local relativePosition = ball.Position - rootPart.Position
            local relativeVelocity = ball.Velocity
            local distance = relativePosition.Magnitude
            local speed = relativeVelocity.Magnitude
            if speed > 0 then      
                return distance / speed
            end
        end
    end
    return math.huge 
end

local function parry()
    if canParry and getgenv().AutoParryEnabled then
        canParry = false
        VirtualInputManager:SendMouseButtonEvent(0, 0, 0, true, game, 0)
        VirtualInputManager:SendMouseButtonEvent(0, 0, 0, false, game, 0)
        task.delay(0.1, function()
            print("Parried")
            canParry = true
        end)
    end
end

local function checkProximityToPlayer(ball)
    local predictionTime = calculatePredictionTime(ball)
    local realBallAttribute = ball:GetAttribute("realBall")
    local target = ball:GetAttribute("target")
    if predictionTime and realBallAttribute and target == player.Name then
        local ballSpeedThreshold = math.max(0.4, 0.6 - ball.Velocity.Magnitude * 0.03)
        if predictionTime <= ballSpeedThreshold then
            parry()
        end
    end
end

RunService.Heartbeat:Connect(function()
    for _, ball in ipairs(BallFolder:GetChildren()) do
        checkProximityToPlayer(ball)
    end
end)

library:SendNotification("Notification", 5, Color3.new(255, 0, 0))
