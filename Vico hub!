-- Import Orion Library
local OrionLib = loadstring(game:HttpGet("https://raw.githubusercontent.com/shlexware/Orion/main/source.lua"))()
local Window = OrionLib:MakeWindow({
    Name = "Blade Ball Script",
    HidePremium = true,
    SaveConfig = true,
    ConfigFolder = "OrionTest"
})

local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local VirtualInputManager = game:GetService("VirtualInputManager")
local BallFolder = Workspace:WaitForChild("Balls")

local player = Players.LocalPlayer
local canParry = true
local canSpam = false
local autoParryActive = false
local autoSpamActive = false
local parryDistance = 5 -- Default distance for parry

local function calculatePredictionTime(ball)
    local character = player.Character
    if character then
        local rootPart = character:FindFirstChild("HumanoidRootPart")
        if rootPart then
            local relativePosition = ball.Position - rootPart.Position
            local relativeVelocity = ball.Velocity

            local distance = relativePosition.Magnitude
            local speed = relativeVelocity.Magnitude

            if speed > 0 then      
                return distance / speed
            end
        end
    end
    return math.huge 
end

local function parry()
    if canParry then
        canParry = false
        VirtualInputManager:SendMouseButtonEvent(0, 0, 0, true, game, 0)
        VirtualInputManager:SendMouseButtonEvent(0, 0, 0, false, game, 0)

        task.delay(0.1, function()
            print("Parried!")
            canParry = true
        end)
    end
end

local function spamParry()
    if canSpam then
        VirtualInputManager:SendMouseButtonEvent(0, 0, 0, true, game, 0)
        VirtualInputManager:SendMouseButtonEvent(0, 0, 0, false, game, 0)
        
        print("Spam parry executed!")
    end
end

local function checkProximityToPlayer(ball)
    local predictionTime = calculatePredictionTime(ball)
    local realBallAttribute = ball:GetAttribute("realBall")
    local target = ball:GetAttribute("target")

    if predictionTime and realBallAttribute and target then
        if target == player.Name then
            local ballSpeedThreshold = math.max(0.4, 0.6 - ball.Velocity.Magnitude * 0.03)

            if predictionTime <= ballSpeedThreshold + parryDistance then -- Include parry distance
                if autoParryActive then
                    parry()
                end
            end
        end
    end
end

local function checkBallsProximity()
    for _, ball in pairs(BallFolder:GetChildren()) do
        if ball:IsA("Part") then
            checkProximityToPlayer(ball) -- Periksa kedekatan bola dengan pemain
        end
    end
end

RunService.Heartbeat:Connect(function()
    checkBallsProximity()
    if autoSpamActive then
        for _, ball in pairs(BallFolder:GetChildren()) do
            if ball:IsA("Part") then
                local distanceToBall = (ball.Position - player.Character.HumanoidRootPart.Position).Magnitude
                if distanceToBall < parryDistance then -- Menggunakan jarak yang ditentukan dari slider
                    spamParry()
                    break -- Hentikan loop setelah melakukan spam
                end
            end
        end
    end
end)

-- Fungsi untuk mengaktifkan AutoParry
function toggleAutoParry()
    autoParryActive = not autoParryActive
    print("Auto Parry is now " .. (autoParryActive and "activated" or "deactivated"))
end

-- Fungsi untuk mengaktifkan AutoSpam
function toggleAutoSpam()
    autoSpamActive = not autoSpamActive
    print("Auto Spam is now " .. (autoSpamActive and "activated" or "deactivated"))
end

-- Tab untuk pengaturan utama
local Tab = Window:MakeTab({
    Name = "Main",
    Icon = "rbxassetid://4483362458",
    PremiumOnly = false
})

-- Menambahkan Color Picker
Tab:AddColorpicker({
    Name = "Colorpicker",
    Default = Color3.fromRGB(255, 0, 0),
    Callback = function(Value)
        print("Color selected: ", Value)
    end
})

-- Menambahkan Slider untuk mengatur jarak parry
Tab:AddSlider({
    Name = "Parry Distance",
    Min = 5,
    Max = 25,
    Default = parryDistance,
    Color = Color3.fromRGB(255, 255, 255),
    Increment = 1,
    ValueName = "units",
    Callback = function(Value)
        parryDistance = Value
        print("Parry distance set to: ", parryDistance)
    end    
})

-- Menambahkan toggle checkbox untuk Auto Parry
Tab:AddToggle({
    Name = "Toggle Auto Parry",
    Default = false,
    Callback = function(Value)
        toggleAutoParry()
    end
})

-- Menambahkan toggle checkbox untuk Auto Spam
Tab:AddToggle({
    Name = "Toggle Auto Spam",
    Default = false,
    Callback = function(Value)
        toggleAutoSpam()
    end
})

print("Script ran without errors")
