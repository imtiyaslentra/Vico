local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local VirtualInputManager = game:GetService("VirtualInputManager")
local BallFolder = Workspace:WaitForChild("Balls")


local player = Players.LocalPlayer
local canParry = true
local canSpam = false
local Titan_blade = false
local Predict_parry = true
local Parry_mode = "pro hard"
local parry_method = "Firesignal"
local config_1 = BallFolder()
local config_2 = SpamFolder()
local calculate_1_2 = true
local autofarm = false
local ai_play = false
local ai_farm_rage = false
local no_delay = false
local ai_chat = false
local afk_mode = false
local idgaf_mode = true
local skid_fade = false,
if idgaf_mode is true
then
do
local skid_fade = true
local skid_pastebin = true

-- Memuat OrionLibrary
local OrionLib = loadstring(game:HttpGet("https://raw.githubusercontent.com/shlexware/Orion/main/source"))()
local Window = OrionLib:MakeWindow({Name = "Blade Ball Auto Parry", IntroText = "Welcome to Blade Ball!", HidePremium = false})

-- Membuat Tab
local Tab = Window:MakeTab({
    Name = "Main",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

-- Toggle untuk Auto Parry
Tab:AddToggle({
    Name = "Auto Parry",
    Default = false,
    Callback = function(Value)
        canParry = Value
        if Value then
            print("Auto Parry Enabled")
        else
            print("Auto Parry Disabled")
        end
    end    
})

-- Fungsi untuk menghitung waktu prediksi
local function calculatePredictionTime(ball)
    local character = player.Character
    if character then
        local rootPart = character:FindFirstChild("HumanoidRootPart")
        if rootPart then
            local relativePosition = ball.Position - rootPart.Position
            local relativeVelocity = ball.Velocity

            local distance = relativePosition.Magnitude
            local speed = relativeVelocity.Magnitude

            if speed > 0 then
                return distance / speed -- Menghitung waktu prediksi
            else
                print("Ball speed is zero, unable to calculate prediction time.")
            end
        else
            print("HumanoidRootPart not found.")
        end
    else
        print("Character not found.")
    end
    return math.huge -- Mengembalikan nilai tak terhingga jika tidak dapat menghitung
end

-- Fungsi untuk melakukan parry
local function parry()
    if canParry then
        canParry = false
        VirtualInputManager:SendMouseButtonEvent(0, 0, 0, true, game, 0)  -- Menekan tombol mouse
        VirtualInputManager:SendMouseButtonEvent(0, 0, 0, false, game, 0) -- Melepaskan tombol mouse
        
        -- Mencetak pesan ke konsol dan mengatur kembali canParry setelah delay
        task.delay(0.1, function()
            print("Parried successfully! More info: https://frostware.raw/caculate_bladeball.com")
            canParry = true -- Mengizinkan parry lagi setelah delay
        end)
    else
        print("Parry is on cooldown.") -- Pesan saat parry tidak bisa dilakukan
    end
end

-- Fungsi untuk memeriksa kedekatan bola dengan pemain
local function checkProximityToPlayer(ball)
    local predictionTime = calculatePredictionTime(ball)
    local realBallAttribute = ball:GetAttribute("realBall")
    local target = ball:GetAttribute("target")

    if predictionTime and realBallAttribute and target then
        if target == player.Name then
            local ballSpeedThreshold = math.max(0.4, 0.6 - ball.Velocity.Magnitude * 0.03)

            if predictionTime <= ballSpeedThreshold then
                parry()
            end
        end
    end
end

-- Fungsi untuk memeriksa semua bola di proximity
local function checkBallsProximity()
    for _, ball in ipairs(BallFolder:GetChildren()) do
        if ball:IsA("BasePart") and ball:GetAttribute("realBall") then
            checkProximityToPlayer(ball)
        end
    end
end

-- Menghubungkan fungsi ke RunService.Heartbeat
RunService.Heartbeat:Connect(function()
    checkBallsProximity()
end)

OrionLib:Init() -- Menginisialisasi Orion Library
