-- Mendapatkan semua service yang diperlukan
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local VirtualInputManager = game:GetService("VirtualInputManager")
local BallFolder = Workspace:WaitForChild("Balls")
local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()

local player = Players.LocalPlayer
local canParry = true
local autoParryEnabled = false -- Menyimpan status toggle auto-parry
local autoSpamEnabled = false  -- Menyimpan status toggle auto-spam

-- Membuat window Orion
local Window = OrionLib:MakeWindow({Name = "AutoParry & AutoSpam", HidePremium = false, SaveConfig = true, ConfigFolder = "OrionTest"})

-- Membuat tab Auto Features di dalam window
local Tab = Window:MakeTab({
    Name = "Auto Features",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

-- Fungsi menghitung waktu prediksi bola mencapai pemain
local function calculatePredictionTime(ball)
    local character = player.Character
    if character then
        local rootPart = character:FindFirstChild("HumanoidRootPart")
        if rootPart then
            local relativePosition = ball.Position - rootPart.Position
            local relativeVelocity = ball.Velocity

            local distance = relativePosition.Magnitude
            local speed = relativeVelocity.Magnitude

            if speed > 0 then      
                return distance / speed
            end
        end
    end
    return math.huge 
end

-- Fungsi untuk melakukan parry
local function parry()
    if canParry then
        canParry = false
        VirtualInputManager:SendMouseButtonEvent(0, 0, 0, true, game, 0)
        VirtualInputManager:SendMouseButtonEvent(0, 0, 0, false, game, 0)
        
        task.delay(0.1, function()
            print("Parried successfully!")
            canParry = true
        end)
    end
end

-- Fungsi untuk mendapatkan bola terdekat berdasarkan waktu prediksi
local function getClosestEntity()
    local closestEntity = nil
    local closestDistance = math.huge
    
    for _, ball in ipairs(BallFolder:GetChildren()) do
        local realBallAttribute = ball:GetAttribute("realBall")
        local target = ball:GetAttribute("target")
        
        -- Pastikan bola memiliki atribut yang benar
        if realBallAttribute ~= nil and target ~= nil then
            -- Pastikan bola menargetkan pemain lokal
            if target == player.Name then
                local predictionTime = calculatePredictionTime(ball)
                if predictionTime and predictionTime < closestDistance then
                    closestDistance = predictionTime
                    closestEntity = ball
                end
            end
        else
            print("Ball missing necessary attributes (realBall or target)")
        end
    end
    
    return closestEntity, closestDistance
end

-- Fungsi untuk auto-parry
local function autoParry()
    if autoParryEnabled then
        local closestBall, predictionTime = getClosestEntity()
    
        if closestBall and predictionTime then
            local ballSpeedThreshold = math.max(0.4, 0.6 - closestBall.Velocity.Magnitude * 0.03)
            
            if predictionTime <= ballSpeedThreshold then
                parry()
            end
        else
            print("No valid ball found for parry or prediction time too long")
        end
    end
end

-- Fungsi untuk auto-spam (melakukan aksi secara berulang, misalnya klik mouse)
local function autoSpam()
    if autoSpamEnabled then
        -- AutoSpam logika untuk klik berulang atau aksi lain
        if canParry then
            VirtualInputManager:SendMouseButtonEvent(0, 0, 0, true, game, 0)
            VirtualInputManager:SendMouseButtonEvent(0, 0, 0, false, game, 0)
            print("AutoSpam action triggered")
        end
    end
end

-- Menghubungkan auto-parry dengan Heartbeat (mengecek bola setiap frame)
RunService.Heartbeat:Connect(function()
    if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
        autoParry()
    else
        print("Character or HumanoidRootPart not found")
    end
end)

-- Menggunakan BindToRenderStep untuk AutoSpam, dengan prioritas sebelum input pengguna
RunService:BindToRenderStep("PreAutoSpam", Enum.RenderPriority.Input.Value - 1, autoSpam)

-- Menambahkan toggle AutoParry ke dalam tab
Tab:AddToggle({
    Name = "Enable AutoParry",
    Default = false,
    Callback = function(Value)
        autoParryEnabled = Value
        if Value then
            print("AutoParry Enabled")
        else
            print("AutoParry Disabled")
        end
    end    
})

-- Menambahkan toggle AutoSpam ke dalam tab
Tab:AddToggle({
    Name = "Enable AutoSpam",
    Default = false,
    Callback = function(Value)
        autoSpamEnabled = Value
        if Value then
            print("AutoSpam Enabled")
        else
            print("AutoSpam Disabled")
        end
    end    
})

-- Menampilkan GUI Orion
OrionLib:Init()
