-- Mendapatkan service dan variabel
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local VirtualInputManager = game:GetService("VirtualInputManager")
local BallFolder = Workspace:WaitForChild("Balls")
local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()

local player = Players.LocalPlayer
local canParry = true
local autoParryEnabled = false
local autoSpamEnabled = false
local parryCooldown = 0.5  -- Cooldown untuk parry agar tidak terlalu cepat

-- Aura Table untuk menyimpan data dan status parry/spam
local aura_table = {
    canParry = true,
    is_Spamming = false,
    parry_Range = 0,
    spam_Range = 0,  
    hit_Count = 0,
    hit_Time = tick(),
    ball_Warping = tick(),
    is_ball_Warping = false
}

-- Latency (Ping) handling untuk AutoParry
local ping = game:GetService("Stats").Network.ServerStatsItem["Data Ping"]:GetValueString()
local adjustedPing = tonumber(ping:match("%d+")) / 1000 -- Mengkonversi ping ke detik

-- Fungsi untuk mendeteksi entitas terdekat (pemain atau objek)
local function get_closest_entity(object)
    local closest_Entity = nil
    local max_distance = math.huge
    
    for _, entity in ipairs(Workspace.Alive:GetChildren()) do
        if entity.Name ~= player.Name and entity:FindFirstChild("HumanoidRootPart") then
            local distance = (object.Position - entity.HumanoidRootPart.Position).Magnitude
            if distance < max_distance then
                closest_Entity = entity
                max_distance = distance
            end
        end
    end
    return closest_Entity
end

-- Fungsi untuk menghitung prediksi waktu bola mencapai pemain (dengan penyesuaian ping)
local function calculatePredictionTime(ball)
    local character = player.Character
    if character then
        local rootPart = character:FindFirstChild("HumanoidRootPart")
        if rootPart then
            local distance = (ball.Position - rootPart.Position).Magnitude
            local speed = ball.Velocity.Magnitude
            if speed > 0 then
                local predictionTime = (distance / speed) - adjustedPing
                return predictionTime > 0 and predictionTime or math.huge -- Hindari nilai negatif
            end
        end
    end
    return math.huge
end

-- Fungsi untuk mendeteksi bola terdekat untuk AutoParry
local function getClosestEntityForParry()
    local closestBall, closestDistance = nil, math.huge
    for _, ball in ipairs(BallFolder:GetChildren()) do
        if ball:GetAttribute("realBall") and ball:GetAttribute("target") == player.Name then
            local predictionTime = calculatePredictionTime(ball)
            if predictionTime < closestDistance then
                closestBall, closestDistance = ball, predictionTime
            end
        end
    end
    return closestBall, closestDistance
end

-- Fungsi deteksi bola untuk AutoSpam, mempertimbangkan pemain terdekat
local function getSpamBall()
    local closestPlayer = get_closest_entity(player.Character.PrimaryPart)
    local targetRelevantBall = nil
    local myName = player.Name
    
    for _, ball in ipairs(BallFolder:GetChildren()) do
        local target = ball:GetAttribute("target")
        local realBall = ball:GetAttribute("realBall")
        
        -- Hanya deteksi bola yang menargetkan pemain atau pemain terdekat
        if realBall and (target == myName or (closestPlayer and target == closestPlayer.Name)) then
            -- Anti-Stop: bola yang tiba-tiba berhenti tidak dianggap valid
            local ballSpeed = ball.Velocity.Magnitude
            if ballSpeed > 1 then -- Anggap kecepatan <1 sebagai bola berhenti
                -- AutoCurve Detection: cek perubahan drastis dalam kecepatan
                local curveDetected = ballSpeed < 10 -- Jika kecepatan bola sangat rendah, anggap curve
                if not curveDetected then
                    targetRelevantBall = ball
                    break -- Temukan satu bola yang valid dan hentikan pencarian
                else
                    print("Curve detected, ignoring ball")
                end
            else
                print("Ball stopped, ignoring")
            end
        end
    end
    return targetRelevantBall
end

-- Fungsi AutoSpam untuk mengelola spam jika bola valid ditemukan
local function autoSpam()
    if autoSpamEnabled then
        local ball = getSpamBall()
        if ball and canParry then
            -- Hanya spam jika bola valid ditemukan
            VirtualInputManager:SendMouseButtonEvent(0, 0, 0, true, game, 0)
            VirtualInputManager:SendMouseButtonEvent(0, 0, 0, false, game, 0)
            print("AutoSpam triggered!")
        end
    end
end

-- Fungsi AutoParry dengan Ping dan jarak
local function autoParry()
    if autoParryEnabled and canParry then
        local closestBall, predictionTime = getClosestEntityForParry()
        if closestBall and predictionTime <= math.max(0.4, 0.6 - closestBall.Velocity.Magnitude * 0.03) then
            parry()
        end
    end
end

-- Fungsi Parry untuk AutoParry
local function parry()
    if canParry then
        canParry = false
        VirtualInputManager:SendMouseButtonEvent(0, 0, 0, true, game, 0)
        VirtualInputManager:SendMouseButtonEvent(0, 0, 0, false, game, 0)
        print("Parried!")
        
        -- Setelah melakukan parry, tambahkan cooldown untuk mencegah parry berlebihan
        task.delay(parryCooldown, function()
            canParry = true
        end)
    end
end

-- Panggilan fungsi AutoParry setiap frame
RunService.Heartbeat:Connect(function()
    if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
        autoParry()
    else
        print("Character or HumanoidRootPart not found")
    end
end)

-- Panggilan fungsi AutoSpam
RunService:BindToRenderStep("PreAutoSpam", Enum.RenderPriority.Input.Value - 1, autoSpam)

-- GUI menggunakan OrionLib
local Window = OrionLib:MakeWindow({Name = "AutoParry & AutoSpam", HidePremium = false, SaveConfig = true, ConfigFolder = "OrionTest"})
local Tab = Window:MakeTab({Name = "Auto Features", Icon = "rbxassetid://4483345998", PremiumOnly = false})

-- Toggle AutoParry
Tab:AddToggle({
    Name = "Enable AutoParry",
    Default = false,
    Callback = function(Value)
        autoParryEnabled = Value
        if Value then
            print("AutoParry Enabled")
        else
            print("AutoParry Disabled")
        end
    end    
})

-- Toggle AutoSpam
Tab:AddToggle({
    Name = "Enable AutoSpam",
    Default = false,
    Callback = function(Value)
        autoSpamEnabled = Value
        if Value then
            print("AutoSpam Enabled")
        else
            print("AutoSpam Disabled")
        end
    end    
})

OrionLib:Init()
