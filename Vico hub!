-- Load ImGUI Library
local ImGui = loadstring(game:HttpGet("https://raw.githubusercontent.com/depthso/Roblox-ImGUI/main/lib.lua"))()

-- Create a new window
local window = ImGui.new("Auto Parry Control", Vector2.new(300, 400))

-- Main Menu
local tab = window:addTab("Main Settings")

-- Add Auto Parry Toggle
tab:addCheckbox("Enable Auto Parry", function(value)
    getgenv().AutoParryEnabled = value
    print("Auto Parry is now set to:", value)
end, false) -- Default set to false

-- Add Walkspeed Slider
tab:addSlider("Walkspeed", 0, 120, 16, function(value)
    print("Walkspeed set to:", value)
end)

-- Add Damage Multiplier Textbox
tab:addTextbox("Damage Multiplier", function(value)
    print("Damage Multiplier set to:", value)
end)

-- Add Kill All Button
tab:addButton("Kill All", function()
    print("Killing all!")
end)

-- Auto Parry Logic (No Changes to Function)
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local VirtualInputManager = game:GetService("VirtualInputManager")
local BallFolder = Workspace:WaitForChild("Balls")

local player = Players.LocalPlayer
local canParry = true

local function calculatePredictionTime(ball)
    local character = player.Character
    if character then
        local rootPart = character:FindFirstChild("HumanoidRootPart")
        if rootPart then
            local relativePosition = ball.Position - rootPart.Position
            local relativeVelocity = ball.Velocity
            local distance = relativePosition.Magnitude
            local speed = relativeVelocity.Magnitude

            if speed > 0 then
                return distance / speed
            end
        end
    end
    return math.huge
end

local function parry()
    if canParry and getgenv().AutoParryEnabled then
        canParry = false
        VirtualInputManager:SendMouseButtonEvent(0, 0, 0, true, game, 0)
        VirtualInputManager:SendMouseButtonEvent(0, 0, 0, false, game, 0)
        
        task.delay(0.1, function()
            print("Parried successfully!")
            canParry = true
        end)
    end
end

local function checkProximityToPlayer(ball)
    local predictionTime = calculatePredictionTime(ball)
    local realBallAttribute = ball:GetAttribute("realBall")
    local target = ball:GetAttribute("target")

    if predictionTime and realBallAttribute and target then
        if target == player.Name then
            local ballSpeedThreshold = math.max(0.4, 0.6 - ball.Velocity.Magnitude * 0.03)

            if predictionTime <= ballSpeedThreshold then
                parry()
            end
        end
    end
end

RunService.Heartbeat:Connect(function()
    for _, ball in pairs(BallFolder:GetChildren()) do
        checkProximityToPlayer(ball)
    end
end)

-- Show GUI
window:show()
