-- Membuat ScreenGui dan Frame untuk OrionLibrary
local player = game.Players.LocalPlayer
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "OrionLibrary"
screenGui.Parent = player:WaitForChild("PlayerGui")
local frame = Instance.new("Frame")
frame.Size = UDim2.new(0.5, 0, 0.5, 0)
frame.Position = UDim2.new(0.25, 0, 0.25, 0)
frame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
frame.BorderSizePixel = 0
frame.Parent = screenGui

-- Menambahkan label judul
local titleLabel = Instance.new("TextLabel")
titleLabel.Size = UDim2.new(1, 0, 0.1, 0)
titleLabel.Position = UDim2.new(0, 0, 0, 0)
titleLabel.Text = "OrionLibrary"
titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
titleLabel.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
titleLabel.Parent = frame

-- Toggle untuk AutoSpam
local autoSpamToggle = Instance.new("TextButton")
autoSpamToggle.Size = UDim2.new(0.8, 0, 0.1, 0)
autoSpamToggle.Position = UDim2.new(0.1, 0, 0.2, 0)
autoSpamToggle.Text = "AutoSpam: OFF"
autoSpamToggle.TextColor3 = Color3.fromRGB(255, 255, 255)
autoSpamToggle.BackgroundColor3 = Color3.fromRGB(70, 130, 180)
autoSpamToggle.Parent = frame

-- Toggle untuk AutoParry
local autoParryToggle = Instance.new("TextButton")
autoParryToggle.Size = UDim2.new(0.8, 0, 0.1, 0)
autoParryToggle.Position = UDim2.new(0.1, 0, 0.35, 0)
autoParryToggle.Text = "AutoParry: OFF"
autoParryToggle.TextColor3 = Color3.fromRGB(255, 255, 255)
autoParryToggle.BackgroundColor3 = Color3.fromRGB(70, 130, 180)
autoParryToggle.Parent = frame

-- Fungsi untuk toggle AutoSpam
getgenv().AutoDetectSpam = false

local function toggleAutoSpam()
    getgenv().AutoDetectSpam = not getgenv().AutoDetectSpam
    if getgenv().AutoDetectSpam then
        autoSpamToggle.Text = "AutoSpam: ON"
    else
        autoSpamToggle.Text = "AutoSpam: OFF"
    end
end

autoSpamToggle.MouseButton1Click:Connect(toggleAutoSpam)

-- Fungsi untuk toggle AutoParry
getgenv().Paws = {
    ["AutoParry"] = false,
    ["PingBased"] = true,
    ["PingBasedOffset"] = 0,
    ["DistanceToParry"] = 0.5,
    ["BallSpeedCheck"] = true,
}

local function toggleAutoParry()
    getgenv().Paws.AutoParry = not getgenv().Paws.AutoParry
    if getgenv().Paws.AutoParry then
        autoParryToggle.Text = "AutoParry: ON"
    else
        autoParryToggle.Text = "AutoParry: OFF"
    end
end

autoParryToggle.MouseButton1Click:Connect(toggleAutoParry)

--///////////////////////////////////////////////////////////////////--

local Alive = workspace:WaitForChild("Alive", 9e9)
local Players = game:GetService("Players")
local Player = Players.LocalPlayer

local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Remotes = ReplicatedStorage:WaitForChild("Remotes", 9e9)
local ParryAttempt = Remotes:WaitForChild("ParryAttempt", 9e9)
local Balls = workspace:WaitForChild("Balls", 9e9)

--///////////////////////////////////////////////////////////////////--

local function get_ProxyPlayer()
    local Distance = math.huge
    local plrRP = Player.Character and Player.Character:FindFirstChild("HumanoidRootPart")
    local PlayerReturn = nil

    for _, plr1 in pairs(Alive:GetChildren()) do
        if plr1:FindFirstChild("Humanoid") and plr1.Humanoid.Health > 50 then
            if plr1.Name ~= Player.Name and plrRP and plr1:FindFirstChild("HumanoidRootPart") then
                local magnitude = (plr1.HumanoidRootPart.Position - plrRP.Position).Magnitude
                if magnitude <= Distance then
                    Distance = magnitude
                    PlayerReturn = plr1
                end
            end
        end
    end
    return PlayerReturn
end

local function SuperClick()
    task.spawn(function()
        if IsAlive() and #Alive:GetChildren() > 1 then
            local args1 = 0.5
            local args2 = CFrame.new()
            local args3 = {["enzo"] = Vector3.new()}
            local args4 = {500, 500}

            if args1 and args2 and args3 and args4 then
                ParryAttempt:FireServer(args1, args2, args3, args4)
            end
        end
    end)
end

task.spawn(function()
    while task.wait() do
        if getgenv().SpamClickA and getgenv().AutoDetectSpam then
            SuperClick()
        end
    end
end)

local ParryCounter = 0
local DetectSpamDistance = 0

local function GetBall(ball)
    local Target = ""

    ball:GetPropertyChangedSignal("Position"):Connect(function()
        local PlayerPP = Player and Player.Character and Player.Character.PrimaryPart
        local NearestPlayer = get_ProxyPlayer()

        if ball and PlayerPP and NearestPlayer and NearestPlayer.PrimaryPart then
            local PlayerDistance = (PlayerPP.Position - NearestPlayer.PrimaryPart.Position).Magnitude
            local BallDistance = (PlayerPP.Position - ball.Position).Magnitude

            DetectSpamDistance = 25 + math.clamp(ParryCounter / 3, 0, 25)

            if ParryCounter > 2 and PlayerDistance < DetectSpamDistance and BallDistance < 55 then
                getgenv().SpamClickA = true
            else
                getgenv().SpamClickA = false
            end
        end
    end)

    ball:GetAttributeChangedSignal("target"):Connect(function()
        Target = ball:GetAttribute("target")
        local NearestPlayer = get_ProxyPlayer()

        if NearestPlayer then
            if Target == NearestPlayer.Name or Target == Player.Name then
                ParryCounter = ParryCounter + 1
            else
                ParryCounter = 0
            end
        end
    end)
end

for _, ball in pairs(Balls:GetChildren()) do
    if ball and not ball:GetAttribute("realBall") then
        return
    end

    GetBall(ball)
end

Balls.ChildAdded:Connect(function(ball)
    if not getgenv().AutoDetectSpam then
        return
    elseif ball and not ball:GetAttribute("realBall") then
        return
    end

    getgenv().SpamClickA = false
    ParryCounter = 0
    GetBall(ball)
end)

-- AutoParry
local function IsTheTarget()
    return Player.Character:FindFirstChild("Highlight") ~= nil
end

local function FindBall()
    local RealBall

    for _, v in pairs(Balls:GetChildren()) do
        if v:GetAttribute("realBall") == true then
            RealBall = v
        end
    end
    return RealBall
end

game:GetService("RunService").PreRender:Connect(function()
    if not FindBall() then return end

    local Ball = FindBall()
    local BallPosition = Ball.Position
    local BallVelocity = Ball.AssemblyLinearVelocity.Magnitude
    local Distance = Player:DistanceFromCharacter(BallPosition)

    local Ping = game.Stats.Network.ServerStatsItem["Data Ping"]:GetValue() / 1000

    if getgenv().Paws.PingBased then
        Distance = Distance + Ping + getgenv().Paws.PingBasedOffset
    end

    if getgenv().Paws.BallSpeedCheck and BallVelocity == 0 then return end

    if (Distance <= BallVelocity) and IsTheTarget() and getgenv().Paws.AutoParry then
        Paws:WaitForChild("ParryButtonPress"):Fire()
    end
end)
