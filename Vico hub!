-- Membuat jendela untuk OrionLib
local OrionLib = loadstring(game:HttpGet("https://raw.githubusercontent.com/shlexware/Orion/main/source"))()
local Window = OrionLib:MakeWindow({Name = "Vico Hub | Integrated", IntroText = "Vico Noob", HidePremium = false})

local Tab = Window:MakeTab({
	Name = "Main",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})

-- Toggle untuk AutoParry
Tab:AddToggle({
    Name = "Auto Parry",
    Default = false,
    Callback = function(state)
        -- Mengatur status parry
        canParry = state
        
        if state then
            print("Auto Parry Enabled")
            OrionLib:MakeNotification({
                Name = "Auto Parry",
                Content = "Auto Parry has been enabled.",
                Time = 5
            })

            RunService.Heartbeat:Connect(function()
                for _, ball in ipairs(BallFolder:GetChildren()) do
                    checkProximityToPlayer(ball)
                end
            end)

        else
            print("Auto Parry Disabled")
            OrionLib:MakeNotification({
                Name = "Auto Parry",
                Content = "Auto Parry has been disabled.",
                Time = 5
            })
            
        end
    end
})

-- Toggle untuk AutoSpam
Tab:AddToggle({
    Name = "Auto Spam (In Progress)",
    Default = false,
    Callback = function(state)
        canSpam = state
        if state then
            print("Auto Spam Enabled")
            OrionLib:MakeNotification({
                Name = "Auto Spam",
                Content = "Auto Spam has been enabled.",
                Time = 5
            })
        else
            print("Auto Spam Disabled")
            OrionLib:MakeNotification({
                Name = "Auto Spam",
                Content = "Auto Spam has been disabled.",
                Time = 5
            })
        end
    end
})

 local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local VirtualInputManager = game:GetService("VirtualInputManager")
local BallFolder = Workspace:WaitForChild("Balls")


local player = Players.LocalPlayer
local canParry = true
local canSpam = false
local Titan_blade = false
local Predict_parry = true
local Parry_mode = "pro hard"
local parry_method = "Firesignal"
local config_1 = BallFolder()
local config_2 = SpamFolder()
local calculate_1_2 = true
local autofarm = false
local ai_play = false
local ai_farm_rage = false
local no_delay = false
local ai_chat = false
local afk_mode = false
local idgaf_mode = true
local skid_fade = false,
if idgaf_mode is true
then
do
local skid_fade = true
local skid_pastebin = true

local function calculatePredictionTime(ball)
    local character = player.Character
    if character then
        local rootPart = character:FindFirstChild("HumanoidRootPart")
        if rootPart then
            local relativePosition = ball.Position - rootPart.Position
            local relativeVelocity = ball.Velocity

            local distance = relativePosition.Magnitude
            local speed = relativeVelocity.Magnitude

            if speed > 0 then      
                return distance / speed
            end
        end
    end
    return math.huge 
end

local function parry()
    if canParry then
        canParry = false
        VirtualInputManager:SendMouseButtonEvent(0, 0, 0, true, game, 0)
        VirtualInputManager:SendMouseButtonEvent(0, 0, 0, false, game, 0)
        
        task.delay(0.1, function()
            print("parried by using calculater at https://frostware.raw/caculate_bladeball.com")
            canParry = true
        end)
    end
end

local function checkProximityToPlayer(ball)
local predictionTime = calculatePredictionTime(ball)
local realBallAttribute = ball:GetAttribute("realBall")
local target = ball:GetAttribute("target")

    if predictionTime and realBallAttribute and target then
        if target == player.Name then
            local ballSpeedThreshold = math.max(0.4, 0.6 - ball.Velocity.Magnitude * 0.03)

            if predictionTime <= ballSpeedThreshold then
                parry()
            end
        end
    end
end
              
RunService.Heartbeat:Connect(function()
    checkBallsProximity()
end)

OrionLib:Init()
